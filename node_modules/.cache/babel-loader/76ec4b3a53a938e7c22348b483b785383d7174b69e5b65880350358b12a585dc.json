{"ast":null,"code":"var _jsxFileName = \"/Users/danialross/Documents/React/EmployeesDirectory/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Profile from \"./components/Profile\";\nimport Add from \"./components/Add\";\nimport Banner from \"./components/Banner\";\nimport Search from \"./components/Search\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n//styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding-bottom: 1rem;\n`;\n_c = StyledDiv;\nfunction App() {\n  _s();\n  //for showing the display\n  const [db, setDb] = useState(null);\n  //uneffected by searching to allow the changing of db then use originalDb to revert back\n  const [originalDb, setOriginalDb] = useState(db);\n  const retrieveDb = () => {\n    fetch(\"http://localhost:3001/api/employees\").then(response => response.json()).then(data => {\n      setDb(data);\n      console.log(db);\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  useEffect(() => {\n    retrieveDb();\n  }, []);\n  console.log(db);\n  const handleEditName = (id, newName) => {\n    const updatedPeople = db.map(person => {\n      if (person.index === id) {\n        return {\n          ...person,\n          name: newName\n        };\n      }\n      return person; // Return unmodified objects\n    });\n\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n  const handleEditTitle = (id, newTitle) => {\n    const updatedPeople = db.map(person => {\n      if (person.index === id) {\n        return {\n          ...person,\n          title: newTitle\n        };\n      }\n      return person; // Return unmodified objects\n    });\n\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n  const handleEditImage = (id, newImage) => {\n    const updatedPeople = db.map(person => {\n      if (person.index === id) {\n        return {\n          ...person,\n          img: newImage\n        };\n      }\n      return person; // Return unmodified objects\n    });\n\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n  const handleDelete = id => {\n    const updatedPeople = db.filter(item => item.index !== id);\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n  const handleAdd = (name, title, img) => {\n    const newEmployee = {\n      name: name,\n      title: title,\n      img: img,\n      index: db.length\n    };\n    setDb([...db, newEmployee]);\n    setOriginalDb([...db, newEmployee]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      children: \"Employees\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      originalDb: originalDb,\n      setter: setDb\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledDiv, {\n      children: db !== null ? db.map(person => {\n        return /*#__PURE__*/_jsxDEV(Profile, {\n          person: person,\n          handleDelete: handleDelete,\n          handleEditName: handleEditName,\n          handleEditTitle: handleEditTitle,\n          handleEditImage: handleEditImage\n        }, person._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledDiv, {\n      children: /*#__PURE__*/_jsxDEV(Add, {\n        handleAdd: handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"BWAJRgofQJQG7PGhw6RwTJPjFuA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledDiv\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Profile","Add","Banner","Search","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledDiv","div","_c","App","_s","db","setDb","originalDb","setOriginalDb","retrieveDb","fetch","then","response","json","data","console","log","catch","error","handleEditName","id","newName","updatedPeople","map","person","index","name","handleEditTitle","newTitle","title","handleEditImage","newImage","img","handleDelete","filter","item","handleAdd","newEmployee","length","children","fileName","_jsxFileName","lineNumber","columnNumber","setter","_id","_c2","$RefreshReg$"],"sources":["/Users/danialross/Documents/React/EmployeesDirectory/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Profile from \"./components/Profile\";\nimport Add from \"./components/Add\";\nimport Banner from \"./components/Banner\";\nimport Search from \"./components/Search\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n//styling\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding-bottom: 1rem;\n`;\n\nfunction App() {\n  //for showing the display\n  const [db, setDb] = useState(null);\n  //uneffected by searching to allow the changing of db then use originalDb to revert back\n  const [originalDb, setOriginalDb] = useState(db);\n  const retrieveDb = () => {\n    fetch(\"http://localhost:3001/api/employees\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDb(data);\n        console.log(db);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n\n  useEffect(() => {\n    retrieveDb();\n  }, []);\n\n  console.log(db);\n\n  const handleEditName = (id, newName) => {\n    const updatedPeople = db.map((person) => {\n      if (person.index === id) {\n        return { ...person, name: newName };\n      }\n      return person; // Return unmodified objects\n    });\n\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n\n  const handleEditTitle = (id, newTitle) => {\n    const updatedPeople = db.map((person) => {\n      if (person.index === id) {\n        return { ...person, title: newTitle };\n      }\n      return person; // Return unmodified objects\n    });\n\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n\n  const handleEditImage = (id, newImage) => {\n    const updatedPeople = db.map((person) => {\n      if (person.index === id) {\n        return { ...person, img: newImage };\n      }\n      return person; // Return unmodified objects\n    });\n\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n\n  const handleDelete = (id) => {\n    const updatedPeople = db.filter((item) => item.index !== id);\n    setDb(updatedPeople);\n    setOriginalDb(updatedPeople);\n  };\n\n  const handleAdd = (name, title, img) => {\n    const newEmployee = {\n      name: name,\n      title: title,\n      img: img,\n      index: db.length,\n    };\n\n    setDb([...db, newEmployee]);\n    setOriginalDb([...db, newEmployee]);\n  };\n\n  return (\n    <>\n      <Banner>Employees</Banner>\n      <Search originalDb={originalDb} setter={setDb} />\n      <StyledDiv>\n        {db !== null\n          ? db.map((person) => {\n              return (\n                <Profile\n                  key={person._id}\n                  person={person}\n                  handleDelete={handleDelete}\n                  handleEditName={handleEditName}\n                  handleEditTitle={handleEditTitle}\n                  handleEditImage={handleEditImage}\n                />\n              );\n            })\n          : null}\n      </StyledDiv>\n      <StyledDiv>\n        <Add handleAdd={handleAdd}></Add>\n      </StyledDiv>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,SAAS;AAOf,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClC;EACA,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACY,EAAE,CAAC;EAChD,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdR,KAAK,CAACQ,IAAI,CAAC;MACXC,OAAO,CAACC,GAAG,CAACX,EAAE,CAAC;IACjB,CAAC,CAAC,CACDY,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACrD,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENM,OAAO,CAACC,GAAG,CAACX,EAAE,CAAC;EAEf,MAAMc,cAAc,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;IACtC,MAAMC,aAAa,GAAGjB,EAAE,CAACkB,GAAG,CAAEC,MAAM,IAAK;MACvC,IAAIA,MAAM,CAACC,KAAK,KAAKL,EAAE,EAAE;QACvB,OAAO;UAAE,GAAGI,MAAM;UAAEE,IAAI,EAAEL;QAAQ,CAAC;MACrC;MACA,OAAOG,MAAM,CAAC,CAAC;IACjB,CAAC,CAAC;;IAEFlB,KAAK,CAACgB,aAAa,CAAC;IACpBd,aAAa,CAACc,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMK,eAAe,GAAGA,CAACP,EAAE,EAAEQ,QAAQ,KAAK;IACxC,MAAMN,aAAa,GAAGjB,EAAE,CAACkB,GAAG,CAAEC,MAAM,IAAK;MACvC,IAAIA,MAAM,CAACC,KAAK,KAAKL,EAAE,EAAE;QACvB,OAAO;UAAE,GAAGI,MAAM;UAAEK,KAAK,EAAED;QAAS,CAAC;MACvC;MACA,OAAOJ,MAAM,CAAC,CAAC;IACjB,CAAC,CAAC;;IAEFlB,KAAK,CAACgB,aAAa,CAAC;IACpBd,aAAa,CAACc,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMQ,eAAe,GAAGA,CAACV,EAAE,EAAEW,QAAQ,KAAK;IACxC,MAAMT,aAAa,GAAGjB,EAAE,CAACkB,GAAG,CAAEC,MAAM,IAAK;MACvC,IAAIA,MAAM,CAACC,KAAK,KAAKL,EAAE,EAAE;QACvB,OAAO;UAAE,GAAGI,MAAM;UAAEQ,GAAG,EAAED;QAAS,CAAC;MACrC;MACA,OAAOP,MAAM,CAAC,CAAC;IACjB,CAAC,CAAC;;IAEFlB,KAAK,CAACgB,aAAa,CAAC;IACpBd,aAAa,CAACc,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMW,YAAY,GAAIb,EAAE,IAAK;IAC3B,MAAME,aAAa,GAAGjB,EAAE,CAAC6B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACV,KAAK,KAAKL,EAAE,CAAC;IAC5Dd,KAAK,CAACgB,aAAa,CAAC;IACpBd,aAAa,CAACc,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMc,SAAS,GAAGA,CAACV,IAAI,EAAEG,KAAK,EAAEG,GAAG,KAAK;IACtC,MAAMK,WAAW,GAAG;MAClBX,IAAI,EAAEA,IAAI;MACVG,KAAK,EAAEA,KAAK;MACZG,GAAG,EAAEA,GAAG;MACRP,KAAK,EAAEpB,EAAE,CAACiC;IACZ,CAAC;IAEDhC,KAAK,CAAC,CAAC,GAAGD,EAAE,EAAEgC,WAAW,CAAC,CAAC;IAC3B7B,aAAa,CAAC,CAAC,GAAGH,EAAE,EAAEgC,WAAW,CAAC,CAAC;EACrC,CAAC;EAED,oBACExC,OAAA,CAAAE,SAAA;IAAAwC,QAAA,gBACE1C,OAAA,CAACN,MAAM;MAAAgD,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1B9C,OAAA,CAACL,MAAM;MAACe,UAAU,EAAEA,UAAW;MAACqC,MAAM,EAAEtC;IAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD9C,OAAA,CAACG,SAAS;MAAAuC,QAAA,EACPlC,EAAE,KAAK,IAAI,GACRA,EAAE,CAACkB,GAAG,CAAEC,MAAM,IAAK;QACjB,oBACE3B,OAAA,CAACR,OAAO;UAENmC,MAAM,EAAEA,MAAO;UACfS,YAAY,EAAEA,YAAa;UAC3Bd,cAAc,EAAEA,cAAe;UAC/BQ,eAAe,EAAEA,eAAgB;UACjCG,eAAe,EAAEA;QAAgB,GAL5BN,MAAM,CAACqB,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMhB,CAAC;MAEN,CAAC,CAAC,GACF;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZ9C,OAAA,CAACG,SAAS;MAAAuC,QAAA,eACR1C,OAAA,CAACP,GAAG;QAAC8C,SAAS,EAAEA;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA,eACZ,CAAC;AAEP;AAACvC,EAAA,CApGQD,GAAG;AAAA2C,GAAA,GAAH3C,GAAG;AAsGZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAA4C,GAAA;AAAAC,YAAA,CAAA7C,EAAA;AAAA6C,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}